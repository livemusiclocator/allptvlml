"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[241],{1241:function(e,t,o){o.d(t,{Xo:function(){return getRoutesByType},Z$:function(){return getEstimatedTravelTime},Zx:function(){return getRouteDirections},getRouteTypes:function(){return getRouteTypes},rN:function(){return getRouteStops}});var n=o(7066),r=o(2474),s=o.n(r),i=o(1876).Buffer;let a="3002834",c="f36b2876-d136-485d-8e06-f057c79c0998";console.log("PTV API Configuration:"),console.log("DEV_ID:",a),console.log("API_KEY exists:",!!c);let PTVApiError=class PTVApiError extends Error{constructor(e,t){super(e),this.name="PTVApiError",this.status=t}};async function generateSignature(e){let t;if(console.log("Generating signature for request:",e),!c)throw console.error("API Key is not defined"),Error("PTV API key is not defined");if(!a)throw console.error("Developer ID is not defined"),Error("PTV Developer ID is not defined");e.includes("devid=")?(console.log("Request already has devid parameter, using as is"),t=e):t=e+(e.includes("?")?"&":"?")+"devid="+a,console.log("Request with DevID:",t);try{console.log("Running in browser environment");try{console.log("Attempting to use SubtleCrypto API");let e=new TextEncoder,o=e.encode(c),n=e.encode(t),r=await window.crypto.subtle.importKey("raw",o,{name:"HMAC",hash:"SHA-1"},!1,["sign"]),s=await window.crypto.subtle.sign("HMAC",r,n),i=Array.from(new Uint8Array(s)),a=i.map(e=>e.toString(16).padStart(2,"0")).join(""),l=a.toUpperCase();return console.log("Generated signature using SubtleCrypto:",l.substring(0,6)+"..."),l}catch(e){console.error("SubtleCrypto failed:",e),console.log("Falling back to server-side implementation")}let e=i.from(c,"utf-8"),o=s().createHmac("sha1",e);o.update(t);let n=o.digest("hex").toUpperCase();return console.log("Generated signature using Node.js crypto:",n.substring(0,6)+"..."),n}catch(e){throw console.error("Error generating signature:",e),e instanceof Error&&console.error("Error details:",{name:e.name,message:e.message,stack:e.stack}),Error("Failed to generate signature: ".concat(e instanceof Error?e.message:String(e)))}}async function ptvApiRequest(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(console.log("PTV API Request - Endpoint: ".concat(e)),!a)throw console.error("PTV API Error: Developer ID is not defined"),Error("PTV Developer ID is not defined");let o=new URLSearchParams;Object.entries(t).forEach(e=>{let[t,n]=e;o.append(t,String(n))});let r=e+(Object.keys(t).length>0?"?"+o.toString():"");console.log("Request Path (before devid): ".concat(r)),console.log("Using Developer ID: ".concat(a.substring(0,3),"..."));try{let t=await generateSignature(r);console.log("Generated Signature: ".concat(t.substring(0,6),"...")),o.append("devid",a),o.append("signature",t);let s="".concat("https://timetableapi.ptv.vic.gov.au").concat(e,"?").concat(o.toString());console.log("Full API URL: ".concat(s)),console.log("Sending API request...");let i=await n.Z.get(s);return console.log("API Response received:",{status:i.status,statusText:i.statusText,dataSize:JSON.stringify(i.data).length}),i.data}catch(e){if(console.error("PTV API Request failed:",e),n.Z.isAxiosError(e)){var s,i,c,l,u,p;if(console.error("Axios Error Details:",{status:null===(s=e.response)||void 0===s?void 0:s.status,statusText:null===(i=e.response)||void 0===i?void 0:i.statusText,data:null===(c=e.response)||void 0===c?void 0:c.data,message:e.message,config:{url:null===(l=e.config)||void 0===l?void 0:l.url,method:null===(u=e.config)||void 0===u?void 0:u.method,headers:null===(p=e.config)||void 0===p?void 0:p.headers}}),e.response)throw new PTVApiError("PTV API error: ".concat(e.response.status," ").concat(e.response.statusText),e.response.status)}throw Error("PTV API request failed: ".concat(e instanceof Error?e.message:String(e)))}}async function getRouteTypes(){return ptvApiRequest("/v3/route_types")}async function getRoutesByType(e){return ptvApiRequest("/v3/routes",{route_types:e})}async function getRouteDirections(e){return ptvApiRequest("/v3/directions/route/".concat(e))}async function getRouteStops(e,t,o){let n={};void 0!==o?(n.direction_id=o,console.log("Getting stops for route ".concat(e,", type ").concat(t,", direction ").concat(o))):console.log("WARNING: No direction_id specified for route ".concat(e,". Stops may not be in correct sequence.")),n.include_distance="true",console.log("Requesting stop_sequence information"),n.stop_disruptions="false",n.include_geopath="false",n.max_results=1e3;try{let o=await ptvApiRequest("/v3/stops/route/".concat(e,"/route_type/").concat(t),n);if(o&&o.stops&&o.stops.length>0){let e=o.stops;console.log("Received ".concat(e.length," stops with sequence info:"),e.slice(0,3).map(e=>({id:e.stop_id,name:e.stop_name,sequence:e.stop_sequence})))}return o}catch(o){throw console.error("Error fetching stops for route ".concat(e,", type ").concat(t,":"),o),o}}async function getStopDetails(e,t){return ptvApiRequest("/v3/stops/".concat(e,"/route_type/").concat(t),{stop_location:"true",stop_amenities:"true",stop_accessibility:"true"})}async function getJourneyBetweenStops(e,t,o){let n=new Date,r=new Date(n.toLocaleString("en-US",{timeZone:"Australia/Melbourne"})),s=r.toISOString().split("T")[0],i=r.toTimeString().split(" ")[0].substring(0,5);return ptvApiRequest("/v3/journey",{from_stop_id:e,to_stop_id:t,route_types:o,date:s,time:i,max_results:1})}async function getEstimatedTravelTime(e,t,o){try{let n=await getJourneyBetweenStops(e,t,o);if(n.journeys&&n.journeys.length>0)return n.journeys[0].duration_mins;throw Error("No journey data available")}catch(n){return console.error("Error getting travel time from PTV API:",n),estimateTravelTimeFallback(e,t,o)}}async function estimateTravelTimeFallback(e,t,o){try{let n=await getStopDetails(e,o),r=await getStopDetails(t,o),s=n.stop.stop_latitude,i=n.stop.stop_longitude,a=r.stop.stop_latitude,c=r.stop.stop_longitude,l=function(e,t,o,n){let r=(o-e)*(Math.PI/180),s=(n-t)*(Math.PI/180),i=Math.sin(r/2)*Math.sin(r/2)+Math.cos(e*(Math.PI/180))*Math.cos(o*(Math.PI/180))*Math.sin(s/2)*Math.sin(s/2);return 6371e3*(2*Math.atan2(Math.sqrt(i),Math.sqrt(1-i)))}(s,i,a,c)/1e3,u={0:40,1:20,2:25,3:40,4:25,5:80}[o]||30;return Math.ceil(1.2*(60*(l/u)))}catch(e){return console.error("Error in fallback travel time estimation:",e),({0:5,1:3,2:4,3:10,4:4,5:15})[o]||5}}}}]);